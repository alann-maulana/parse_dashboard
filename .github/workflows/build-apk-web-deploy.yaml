name: APK & Web Deployment

on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
      with:
        java-version: 1.8
        - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.8.1'
          channel: 'stable'
      - name: "Create parse-credentials.json"
        run: echo '[{"configuration":{"server":"https://parseapi.back4app.com/","applicationId":"DekBV7i5yTYOR5suPzvJJUXO4YBrMDeEVc3cVDAk","masterKey":"nUdWWPUNbYwxD7rVYSvWWzv7uwPhiLSH6wVKbQER","enableLogging":false},"appName":"Parse-Dashboard-Test","icon":{"codePoint":"0xe420","fontFamily":"MaterialIcons"}}]' > assets/json/parse-credentials.json
      - name: "Install flutter packages"
        run: flutter packages get
      - run: flutter config --enable-web
      - name: "Build flutter web"
        run: flutter build web --release -v
      - name: "Upload build/web"
        uses: actions/upload-artifact@v1
        with:
          name: parse-dashboard-web
          path: build/web

  build-apk:
    name: Build APK
    needs: build-web
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: subosito/flutter-action@v1.4.0
        with:
          flutter-version: '2.8.1'
          channel: 'stable'
      - name: "Download build/web"
        uses: actions/download-artifact@v1
        with:
          name: parse-dashboard-web
          path: build/web
      - name: "Create parse-credentials.json"
        run: echo '[{"configuration":{"server":"https://parseapi.back4app.com/","applicationId":"DekBV7i5yTYOR5suPzvJJUXO4YBrMDeEVc3cVDAk","masterKey":"nUdWWPUNbYwxD7rVYSvWWzv7uwPhiLSH6wVKbQER","enableLogging":false},"appName":"Parse-Dashboard-Test","icon":{"codePoint":"0xe420","fontFamily":"MaterialIcons"}}]' > assets/json/parse-credentials.json
      - name: "Install flutter packages"
        run: flutter packages get
      - name: "Build android APK debug 32 & 64 bit"
        run: flutter build apk --debug --target-platform android-arm,android-arm64 --split-per-abi -v
      - run: mkdir build/web/debug
      - run: mv build/app/outputs/apk/debug/app-armeabi-v7a-debug.apk build/web/debug/32bit.apk
      - run: mv build/app/outputs/apk/debug/app-arm64-v8a-debug.apk build/web/debug/64bit.apk
      - name: "Build android APK release 32 & 64 bit"
        run: flutter build apk --release --target-platform android-arm,android-arm64 --split-per-abi -v
      - run: mkdir build/web/release
      - run: mv build/app/outputs/apk/release/app-armeabi-v7a-release.apk build/web/release/32bit.apk
      - run: mv build/app/outputs/apk/release/app-arm64-v8a-release.apk build/web/release/64bit.apk
      - name: "Upload build/web"
        uses: actions/upload-artifact@v1
        with:
          name: parse-dashboard-web
          path: build/web

  deploy:
    name: Deploy to Netlify
    needs: build-apk
    runs-on: ubuntu-latest
    steps:
      - name: "Download build/web"
        uses: actions/download-artifact@v1
        with:
          name: parse-dashboard-web
          path: build/web
      - name: "Deploy to Netlify"
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build/web --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'